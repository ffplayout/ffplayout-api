"""
Django settings for ffplayout project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta
from pydoc import locate

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.abspath(os.path.join(__file__, '..'))))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'rest_framework',
    'corsheaders'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ffplayout.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ffplayout.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    }
]

# simple JWT auth settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=7),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# dynamic app loader
APPS_DIR = os.path.join(BASE_DIR, 'apps/')

for dir in os.listdir(APPS_DIR):
    if os.path.isdir(os.path.join(APPS_DIR, dir)):
        app_name = 'apps.{}'.format(dir)

        if app_name not in INSTALLED_APPS:
            # add app to installed apps
            INSTALLED_APPS += (app_name, )

            if os.path.isfile(os.path.join(APPS_DIR, dir, 'settings.py')):
                db = locate('{}.settings.DATABASES'.format(app_name))

                for key in db:
                    if key not in DATABASES:
                        # add app db to DATABASES
                        DATABASES.update({key: db[key]})

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# ffmpeg filter node, needs to be edit only when the filter chain changes
DRAW_TEXT_NODE = 'Parsed_drawtext_2'

# zmq settings
REQUEST_TIMEOUT = 1000

###############################################################################
# controlling of the engine over supervisord xmlrpclib
# use_socker False switch to systemd
USE_SOCKET = True
SOCKET_IP = 'localhost'
SOCKET_PORT = 9011
SOCKET_USER = 'ffplayout'
SOCKET_PASS = 'hsF0wQkl5zopEy1mBlT3g'

###############################################################################
# srs streaming server
SRS_IP = 'srs'
SRS_API_PORT = 1985

# srs rtmp server API key
SRS_KEY = 'fdO12mlKgp0H4z3sG8ybc5Du9wQFi77vN'

# rtmp authentication
RTMP_KEY = 'fdO12mlKgp0H4z3sG8ybc5Du9wQFi77vN'
# set which rtmp stream have highes priority (low priority get kicked out)
# stream is the last part of the rtmp address: rtmp://example.org/live/[stream]
HIGH_PRIORITY_STREAM = 'event'
LOW_PRIORITY_STREAM = 'tv'
